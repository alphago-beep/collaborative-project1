# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18yqF-oiLOMcovg5vPup_UobbQUYwmgzi
"""

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/Stability-AI/stable-audio-tools.git
# %cd stable-audio-tools
!pip install -e .
# %cd ..
!pip install -U protobuf

from huggingface_hub import hf_hub_download
hf_hub_download(repo_id='stabilityai/stable-audio-open-1.0',filename='model.ckpt',local_dir='./')
hf_hub_download(repo_id='stabilityai/stable-audio-open-1.0',filename='model_config.json',local_dir='./')

from stable_audio_tools.models.factory import create_model_from_config
from stable_audio_tools.models.utils import load_ckpt_state_dict
from stable_audio_tools.training.utils import copy_state_dict
from stable_audio_tools.inference.sampling import sample_k
import json
import torch

print('loading model...')
model_config = json.load(open('/content/model_config.json'))
device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')

model = create_model_from_config(model_config)
# Load the checkpoint state dictionary
ckpt_state_dict = torch.load('/content/model.ckpt')
# Assuming the state_dict is stored under the key 'state_dict' (common practice)
# Adjust the key if it's different in your saved checkpoint
model_state_dict = ckpt_state_dict.get('state_dict', ckpt_state_dict) # Get the actual model state dict
copy_state_dict(model, model_state_dict)  # Pass the state dict to copy_state_dict

model.to(device)
model.eval().requires_grad_(False)
print(model)

